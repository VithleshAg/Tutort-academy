// 

[-3,-2, 4,5,7]

[-7, -3, -2, -8, -1]

function maxProd(arr, n){
	let max1 = null, max2=null, max3=null;
	let min1 = null, min2=null;
	
	for(let v of arr){

			if(max1<v || !max1){
				max3 = max2;
				max2 = max1;
				max1 = v;
				
			} else if(max2<v || !max2){
				max3 = max2;
				max2 = v;
				
			} else if(max3<v || !max3){
				max3 = v;
				
			} 

			if(min1>v || !min1){
				min2 = min1;
				min1 = v;
				
			} else if(min2>v || !min2){
				min2 = v;
				
			} 

	}
	
	return Math.max((max1 * max2 * max3), (max1*min1*min2));
	
}



//
12 => 1100
11 => 1011
10 => 1010

function sortBitwise(arr, n){
  const map = new Map();

  for(let val of arr){
    let setBits=0;
    let x = val;
    while(x!=0){
      setBits+= x%2;
      x = Math.floor(x/2);
    }	
    map.set(val, setBits);
  }
  arr.sort((a,b) => {
    const bitA = map.get(a);
    const bitB = map.get(b);

    if(bitA < bitB) return -1;
    else if(bitA > bitB) return 1;
    else return a-b;

  })

  console.log({map, arr})
}

sortBitwise([11,13,19,5,9,10,32], 6)

